import logging
import os
import asyncio

from aiogram import Bot, Dispatcher, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile, WebAppInfo
from dotenv import load_dotenv
import psycopg2
# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

logger = logging.getLogger(__name__)

bot = Bot(os.getenv("BOT_TOKEN"), default=DefaultBotProperties(
    parse_mode=ParseMode.HTML,
))

dp = Dispatcher(store=MemoryStorage())
start_router = Router()


@start_router.message(CommandStart())
async def hello(message):
    connection = psycopg2.connect(
        dbname=os.getenv("DATABASE_NAME"),
        user=os.getenv("DATABASE_USER"),
        password=os.getenv("DATABASE_PASSWORD"),
        host=os.getenv("DATABASE_HOST"),
        port=os.getenv("DATABASE_PORT")
    )
    cursor = connection.cursor()
    cursor.execute(
        "INSERT INTO exchange_user (tg_id, username, first_name, last_name) VALUES (%s, %s, %s, %s) "
        "ON CONFLICT (tg_id) DO NOTHING;",
        (message.chat.id, message.chat.username, message.chat.first_name, message.chat.last_name)
    )
    connection.commit()
    buttons = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="–ò—Å–∫–∞—Ç—å –∑–∞–∫–∞–∑ üîç", web_app=WebAppInfo(url="https://innofreelance.ru/exchange/orders")),
                          InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ üì¢", web_app=WebAppInfo(url="https://innofreelance.ru/exchange/office"))]])

    await message.answer(text="""

üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ <b>INNOFreelance</b>!

–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –≥–¥–µ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã –Ω–∞—Ö–æ–¥—è—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∞ –∑–∞–∫–∞–∑—á–∏–∫–∏ ‚Äî —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π. 

–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–¥–µ—Å—å:

üíº <b>–ó–∞–∫–∞–∑—á–∏–∫–∏</b>:
 - –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏ –Ω–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏—Ö —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –¥–ª—è –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
 - –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.
 - –õ–µ–≥–∫–æ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –æ–±—â–∞–π—Ç–µ—Å—å —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º–∏.

üßë‚Äçüíª <b>–§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã</b>:
 - –ù–∞—Ö–æ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–∏–º –Ω–∞–≤—ã–∫–∞–º.
 - –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ, —Ä–∞–±–æ—Ç–∞—è –Ω–∞–¥ –ª—é–±–∏–º—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏.
 - –†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ—é –∫–∞—Ä—å–µ—Ä—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.


–ñ–µ–ª–∞–µ–º –≤–∞–º —É—Å–ø–µ—Ö–æ–≤ –Ω–∞ INNOFreelance! ‚ú®  

<b>–í—ã–±–µ—Ä–∏—Ç–µ, —Å —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å</b> üëá"""
                               , reply_markup=buttons)


dp.include_router(start_router)


async def main():
    logger.info("Starting bot and web server")

    # –û—Ç–∫–ª—é—á–∞–µ–º –≤–µ–±—Ö—É–∫, —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª —á–µ—Ä–µ–∑ polling
    await bot.delete_webhook(drop_pending_updates=True)
    logger.info("–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ (polling) –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    await asyncio.gather(
        dp.start_polling(bot),
    )


if __name__ == '__main__':
    asyncio.run(main())
